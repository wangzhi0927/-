<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.slzr.system.dao.RoleDao">

	<select id="get" resultType="com.slzr.system.domain.RoleDO">
		select
		RoleId,RoleName,RoleSign,Remark,UserIdCreate,GmtCreate,GmtModified
		from SYS_Role where RoleId = #{value}
	</select>

	<select id="list" resultType="com.slzr.system.domain.RoleDO">
		SELECT
			DISTINCT
			ro.RoleId,
			ro.RoleName,
			ro.Remark
		FROM
			SYS_Role  ro
		LEFT JOIN SYS_UserRole ur ON ro.RoleId = ur.RoleId
		LEFT JOIN SYS_User [use]  ON ur.UserId = [use].ID
		<where>
			<if test="merchantCode != null and merchantCode != ''"> and MerchantCode = #{merchantCode} </if>
			<if test="userId != null and userId != ''"> and ur.UserId = #{userId} </if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by RoleId desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="count" resultType="int">
		select count(*) from SYS_Role
		<where>
			<if test="roleId != null and roleId != ''"> and RoleId = #{roleId} </if>
			<if test="roleName != null and roleName != ''"> and RoleName = #{roleName} </if>
			<if test="roleSign != null and roleSign != ''"> and RoleSign = #{roleSign} </if>
			<if test="remark != null and remark != ''"> and Remark = #{remark} </if>
			<if test="userIdCreate != null and userIdCreate != ''"> and UserIdCreate = #{userIdCreate} </if>
			<if test="gmtCreate != null and gmtCreate != ''"> and GmtCreate = #{gmtCreate} </if>
			<if test="gmtModified != null and gmtModified != ''"> and GmtModified = #{gmtModified} </if>
		</where>
	</select>

	<insert id="save" parameterType="com.slzr.system.domain.RoleDO"
		useGeneratedKeys="true" keyProperty="roleId">
		insert into SYS_Role
		(
		RoleName,
		RoleSign,
		Remark,
		UserIdCreate,
		GmtCreate,
		GmtModified
		)
		values
		(
		#{roleName,jdbcType=VARCHAR},
		#{roleSign,jdbcType=VARCHAR},
		#{remark,jdbcType=VARCHAR},
		#{userIdCreate,jdbcType=BIGINT},
		#{gmtCreate,jdbcType=TIMESTAMP},
		#{gmtModified,jdbcType=TIMESTAMP}
		)
	</insert>

	<update id="update" parameterType="com.slzr.system.domain.RoleDO">
		update SYS_Role
		<set>
			<if test="roleName != null">RoleName = #{roleName}, </if>
			<if test="roleSign != null">RoleSign = #{roleSign}, </if>
			<if test="remark != null">Remark = #{remark}, </if>
			<if test="userIdCreate != null">UserIdCreate = #{userIdCreate}, </if>
			<if test="gmtCreate != null">GmtCreate = #{gmtCreate}, </if>
			<if test="gmtModified != null">GmtModified = #{gmtModified}</if>
		</set>
		where RoleId = #{roleId}
	</update>

	<delete id="remove">
		delete from SYS_Role where RoleId = #{value}
	</delete>

	<delete id="batchRemove">
		delete from SYS_Role where RoleId in
		<foreach item="roleId" collection="array" open="(" separator=","
			close=")">
			#{roleId}
		</foreach>
	</delete>

</mapper>